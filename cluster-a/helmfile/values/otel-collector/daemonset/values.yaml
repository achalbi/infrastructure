# Reference documentation: https://opentelemetry.io/docs/platforms/kubernetes/getting-started/

# OpenTelemetry Collector values
mode: daemonset  # deployment or daemonset (daemonset is for kubernetes)   

presets:
  # enables the k8sattributesprocessor and adds it to the traces, metrics, and logs pipelines
  kubernetesAttributes:
    enabled: true
    # You can also configure the preset to add all of the associated pod's labels and annotations to you telemetry.
    # The label/annotation name will become the resource attribute's key.
    extractAllPodLabels: true
    extractAllPodAnnotations: true
  # enables the kubeletstatsreceiver and adds it to the metrics pipelines
  kubeletMetrics:
    enabled: true
  # Enables the filelogreceiver and adds it to the logs pipelines
  logsCollection:
    enabled: true
    includeCollectorLogs: true
  hostMetrics:
    enabled: true

# OpenTelemetry Collector configuration
config:
  receivers:
    filelog:
      include:
        - /var/log/pods/*appender-java*/*/*.log
    kubeletstats:
      insecure_skip_verify: true
    # otlp: # the OTLP receiver the app is sending traces to
    #   protocols:
    #     grpc:
    #       endpoint: 0.0.0.0:4317
    #     http:
    #       endpoint: 0.0.0.0:4318

  processors:
    batch:
      timeout: 1s
      send_batch_size: 1024
    memory_limiter:
      check_interval: 1s
      limit_mib: 900

  exporters:
    # debug: to be not present in production value file
    debug:
      verbosity: detailed
    otlp:
      endpoint: "http://opentelemetry-collector-deployment.dev-observability:4317"
      # sending_queue:
      #   queue_size: 10000  # Increase from default (e.g., 2048)
      #   num_consumers: 20  # Increase parallel export threads
      # batch:
      #   send_batch_size: 1000  # Number of items to batch
      #   send_batch_max_size: 2000  # Max batch size
      #   timeout: 5s  # Time to wait before sending a batch
      tls:
        insecure: true

  service:
    pipelines:
      traces:
        receivers: [otlp]
        processors: [batch, memory_limiter]
        exporters: [debug, otlp]
      metrics:
        receivers: [otlp]
        processors: [batch, memory_limiter]
        exporters: [debug, otlp]
      logs:
        receivers: [filelog]
        processors: [batch, memory_limiter]
        exporters: [debug, otlp]

resources:
  limits:
    memory: 1Gi
  requests:
    cpu: 100m

image:
  repository: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s
  pullPolicy: Always

command:
  name: "otelcol-k8s"

fullnameOverride: "opentelemetry-collector-daemonset"
