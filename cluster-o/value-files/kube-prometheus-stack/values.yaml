nameOverride: 'prometheus'

prometheus:
  prometheusSpec:
    # additionalScrapeConfigs:
    #   - job_name: 'otel-collector'
    #     scrape_interval: 10s
    #     static_configs:
    #       - targets: ['opentelemetry-collector:9464'] # Replace with your Collector's address and port
    enableRemoteWriteReceiver: true
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 10Gi
    # enableOTLPReceiver: true
    # otlp:
    #   promoteResourceAttributes:
    #     - service.instance.id
    #     - service.name
    #     - service.namespace
    #     - service.version
    #     - cloud.availability_zone
    #     - cloud.region
    #     - container.name
    #     - deployment.environment
    #     - deployment.environment.name
    #     - k8s.cluster.name
    #     - k8s.container.name
    #     - k8s.cronjob.name
    #     - k8s.daemonset.name
    #     - k8s.deployment.name
    #     - k8s.job.name
    #     - k8s.namespace.name
    #     - k8s.pod.name
    #     - k8s.replicaset.name
    #     - k8s.statefulset.name
    #     - k8s.node.name
    #   keepIdentifyingResourceAttributes: true
    #   translationStrategy: NoUTF8EscapingWithSuffixes
    #   # convertHistogramsToNHCB: false
    # storage:
    #   # OTLP is a push-based protocol, Out of order samples is a common scenario.
    #   tsdb:
    #     out_of_order_time_window: 30m

grafana:
  enabled: false

defaultRules:
  create: false

prometheus-node-exporter:
  hostRootFsMount:
    enabled: false

alertmanager:
  enabled: false

prometheus-operator:
  enabled: true

kube-state-metrics:
  enabled: false

nodeExporter:
  enabled: false

kubernetesServiceMonitors:
  enabled: false

global:
  rbac:
    create: true

    ## Create ClusterRoles that extend the existing view, edit and admin ClusterRoles to interact with prometheus-operator CRDs
    ## Ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/#aggregated-clusterroles
    createAggregateClusterRoles: true

  